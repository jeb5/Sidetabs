:root {
  /*************
		--theme-bg-color: 30, 30, 30;
		--theme-tab-text-color: 0, 255, 0;
		--theme-tab-background-text-color: 0, 0, 255;
		--theme-line-separator-color: 0, 0, 0;
		--theme-tab-border-color: 255, 255, 0;
		--theme-tab-load-color: 0, 255, 255;
		--theme-tab-selected-color: 255, 0, 255;
		--theme-button-hover-background: 255, 0, 0;
		--theme-bg-overlay: 0, 0, 0, 0;
		--theme-bg-image: rgba(var(--theme-bg-color));
		--theme-icons-color: 255, 255, 255;
		*************/

  --favicon-height: 16px;
  --tab-height: 30px;
  --tab-gap: 5px;
}
html {
  background: rgba(var(--theme-bg-color));
}
body {
  /* background: var(--theme-bg-image); */
  color: white;
  height: 100vh;
}
#reactRoot {
  height: 100%;
}
#sidebar {
  /* #sidebar ought to be full height, to capture all onContextMenu events*/
  height: 100%;
  display: flex;
  flex-direction: column;
  margin-top: -2px; /* Keeps top tab square with sidebar edges */
  overflow-y: hidden;
  scrollbar-width: none;
}
#backgroundImagePanel {
  position: absolute;
  z-index: -1;
  height: 100vw;
  width: 100vh;
  top: calc(calc(100vh / 2) - calc(100vw / 2));
  left: calc(calc(100vw / 2) - calc(100vh / 2));
  background: var(--theme-bg-image);
  background-color: rgba(var(--theme-bg-color));
  outline: 1000px solid rgba(var(--theme-bg-overlay));
  outline-offset: -1000px;
  transform: rotate(90deg);
}
hr {
  width: calc(100% - 14px);
  height: 0;
  border: 0px;
  border-bottom: 1px solid rgba(var(--theme-line-separator-color));
  margin: 0px auto;
  opacity: 0.8;
}
#sidebar > * {
  flex-shrink: 0;
}
#sidebar > .regularTabs {
  flex-shrink: 2;
}
#sidebar > .tabsDiv:not(.empty) {
  padding: var(--tab-gap) 0;
}
#sidebar > .pinnedTabs {
  /* Make the pinned tabs div as big as it wants, capped out at 30%, rounded such that it shows tabs nicely */
  max-height: calc(round(30%, calc(var(--tab-height) + var(--tab-gap))) + var(--tab-gap));
}

/* Groups */
.group {
  margin: calc(var(--tab-gap)/2) 0 0 3px;
}
.group_header {
  display: flex;
  justify-content: space-between;
}
.group_title_box {
  display: flex;
  align-items: center;
  background-color: var(--group-color, red);
  color: white;
  font-weight: 600;
  font-size: 12px;
  border-radius: 4px;
  padding: 1.5px 5px;
}
.group_arrowhead_down {
  width: 12px;
  height: 12px;
  margin-left: 5px;
}
.group_arrowhead_down>.icon {
  fill: white;
}
.group_body {
  margin-top: 4px;
  display: grid;
  grid-template-columns: auto 1fr;
}
.group_contents {
  min-width: 0; /* Somehow prevents overflow */
}
.group_bar {
  /* background-color: #118518; */
  width: 3px;
  margin-right: 3px;
  padding: calc(var(--tab-gap)/2) 0;
}
.group_bar::after {
  content: "";
  display: block;
  width: 100%;
  height: 100%;
  background-color: #118518;
  border-radius: 1.5px;
}



/*  */

.landingSpot {
  height: 0.01px;
}

.tabsDiv {
  overflow-y: scroll;
  scrollbar-width: none;
}
.tabsDiv:empty {
  display: none;
}
.tab {
  display: flex;
  align-items: center;
  border-radius: 3px;
  overflow: hidden;
  box-sizing: border-box;
  height: var(--tab-height);
  border: 1px solid transparent;
  --tab-text-color: var(--theme-tab-background-text-color);
}
.tab-holder {
  position: relative;
  margin: calc(var(--tab-gap)/2) 4px;
}
.tab-holder:first-child {
  margin-top: 0;
}
.tab-holder:last-child {
  margin-bottom: 0;
}
.iconPlusIndicator {
  flex-shrink: 0;
  margin: 0 6px; /* Centers 16x16 icon in 28x28 container */
  height: var(--favicon-height);
  width: var(--favicon-height);
  position: relative;
}
.tabIcon {
  width: 100%;
  height: 100%;
  box-sizing: content-box;
  transition: opacity 200ms ease, transform 200ms ease;
}
.tabIcon[src=""] {
  visibility: hidden;
}
.tab.loading .tabIcon {
  opacity: 0.8;
  transform: scale(0.95);
}
.badges {
  height: 1em;
  flex-shrink: 0;
  display: flex;
}
.badges > .badge {
  width: 1em;
}
.badges:empty {
  display: none;
}
.badge:has(.wide-icon) {
  margin-right: 2px;
} 
svg.icon.recording-icon {
  animation: recordingPulse 1s ease infinite alternate;
}
@keyframes recordingPulse {
  from {
    fill: #c2a5a5;
  }
  to {
    opacity: 1;
    fill: #d75d55;
  }
}

.indicator, .loadingIndicator {
  position: absolute;
  transform: translate(50%, 50%);
  bottom: 0;
  right: 0;
}

.indicator {
  width: 10px;
  height: 10px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.indicator > .icon {
  width: 100%;
  height: 100%;
  fill: rgba(var(--theme-icons-color));
  transition: transform 200ms ease;
}

.iconPlusIndicator:has(.indicator) .tabIcon  {
  mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" height="20" width="20"><circle cx="20" cy="20" r="6" fill="black"/></svg>'),
  url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" height="20" width="20"><rect x="0" y="0" width="20" height="20" fill="black"/></svg>');
  mask-size: 20px;
  mask-position: 100% 100%;
  mask-composite: exclude;
  mask-repeat: no-repeat;
}

.loadingIndicator {
  opacity: 0.8;
  width: 12px;
  height: 12px;
  bottom: 3px;
  right: 3px;
  background: rgba(var(--theme-bg-color));
  border-radius: 50%;
}

.loadingIndicator::after {
  content: '';
  display: block;
  box-sizing: border-box;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  border: 3px solid rgba(0, 0, 0, 0);
  border-top: 3px solid rgba(var(--theme-tab-load-color));
  animation: loading 400ms linear infinite;
}
@keyframes loading {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
.tab.discarded {
  opacity: 0.7;
}
.tab > * {
  z-index: 2;
}
.tab-holder.dragging {
  z-index: 4;
  pointer-events: initial !important;
}
.tab.drawingAttention {
  font-weight: bold;
}
.tab.justLoaded:after {
  content: "";
  position: absolute;
  left: 0;
  height: 100%;
  z-index: 1;
  background: rgba(var(--theme-tab-load-color));
  border-radius: 0px 5px 5px 0px;
  animation: finishLoad 400ms ease-out;
}
@keyframes finishLoad {
  from {
    width: 0%;
    opacity: 90%;
  }
  to {
    opacity: 0%;
    width: 100%;
  }
}
.tabText {
  overflow: hidden;
  white-space: nowrap;
  position: relative;
  width: 100%;
  margin-right: 5px;
  margin-left: 2px;
  flex-shrink: 10;
  color: rgba(var(--tab-text-color));
  mask-image: linear-gradient(90deg, black calc(100% - 20px), transparent 100%);
}
.tabCloseBtn {
  display: none;
  width: 20px;
  height: 20px;
  margin-right: 5px;
  padding: 2px;
  cursor: pointer;
}
.tabCloseBtn > .icon {
  fill: rgba(var(--tab-text-color));
}
.tabCloseBtn:hover {
  background: rgba(var(--theme-button-hover-background));
  border-radius: 3px;
}
.containerIndicator {
  width: 0px;
  align-self: stretch;
  position: relative;
}
.containerIndicator::after {
  content: "";
  background-color: inherit;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  width: 1.5px;
}
.tab.activeTab.activeTab {
  --tab-text-color: var(--theme-tab-text-color);
  border: 1px solid rgba(var(--theme-tab-border-color));
}
.multiselect_in_progress .tab.highlighted {
  border: 1px solid #2480cc;
}
.tab.highlighted {
  background: rgba(var(--theme-tab-selected-color));
  box-shadow: 0 0 4px rgba(0,0,0,.35);
}
.multiselect_in_progress .tab.highlighted.activeTab {
  border: 2px solid #2480cc;
}

.tabsDiv .tab:hover:not(.activeTab) {
  background: rgba(var(--theme-tab-hover-color));
}
.tabsDiv.reordering {
  pointer-events: none !important;
}
.tab:hover > .tabCloseBtn {
  display: block;
}
.newTabBar {
  align-items: center;
  display: flex;
  cursor: pointer;
  opacity: 0.5;
  margin: var(--tab-gap) 4px;
  height: var(--tab-height);
  transition: opacity 100ms ease;
}
.newTabBar:hover {
  opacity: 1;
}
.newTabBar > .addBtn {
  width: var(--favicon-height);
  height: var(--favicon-height);
  margin: 0 5px 0 7px;
}
.newTabBar > .newTabLabel {
  margin-left: 2px;
  color: rgb(var(--theme-tab-text-color));
}
svg.icon {
  width: 100%;
  height: auto;
  fill: rgba(var(--theme-icons-color));
}
svg.defaultTabIcon {
  opacity: 70%;
}

/*Tab autohiding stuff*/
/* #sidebar {
	transition: padding 100ms ease;
} */
/* .iconPlusIndicator {
	transition: margin 100ms ease;
} */

.tabText {
  transition: opacity 200ms ease;
}

@media all and (max-width: 70px) {
  /*The aim is to have each tab be 30x30 px*/
  .tabText {
    position: absolute;
    left: -800px; /* Send it offscreen */
    /* (Avoids margins having layout impact, while also avoiding display: none, which would prevent an opacity transition) */
    opacity: 0;
  }
  .tab:hover > .tabCloseBtn,
  .tabCloseBtn:hover {
    display: none;
  }
}
@media all and (max-width: 95px) {
  .newTabLabel {
    display: none;
  }
}
